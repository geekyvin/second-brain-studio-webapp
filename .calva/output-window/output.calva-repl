; This is the Calva REPL Window.
; It's just a file, really, with some special treatment from Calva.
; Use it as a REPL input prompt if you like. (When the REPL is connected.)
; TIPS: The keyboard shortcut `ctrl+alt+o r` shows and focuses this window
; Please see https://calva.io/repl-window/ for more info.
; Happy coding! ♥️

; TIPS: As with any Clojure file when the REPL is connected:
; - `alt+enter` evaluates the current top level form.
; - `ctrl+enter` evaluates the current form.
; Special for this file:
; - `alt+up` and `alt+down` traverse up and down the REPL command history
;    when the cursor is after the last contents at the prompt
; 
; See also the Calva Inspector: https://calva.io/inspector/

PLEASE NOTE
We will update the default location of this file.
The new default location will be
  "<projectRootPath>/.calva/repl.calva-repl"
For now the legacy path is used by default.
To give yourself a smooth transition, you can opt in
to the change, by configuring this setting as false:
  "calva.useLegacyReplWindowPath"
and then add "**/.calva/repl.calva-repl" to your ".gitignore" file.


This file is configured as the output destination for all REPL output.
You can configure this with the setting:
  "calva.outputDestinations"


; Jacking in...
; Connecting using "shadow-cljs" project type.
; You can make Calva auto-select this.
;   - See https://calva.io/connect-sequences/
; 

; Starting Jack-in: (cd /Users/vinoth/Documents/workspace/second-brain-studio-webapp; npx shadow-cljs -d cider/cider-nrepl:0.47.1 watch :app)
; Using host:port localhost:8777 ...
; Hooking up nREPL sessions ...
; Connected session: clj
; Evaluating code from settings: 'calva.autoEvaluateCode.onConnect.clj'
nil
clj꞉shadow.user꞉> 
; Creating cljs repl session...
; Connecting cljs repl: shadow-cljs...
; Connected session: cljs, repl: :app
; TIPS: You can choose which REPL to use (clj or cljs):
;    *Calva: Toggle REPL connection*
;    (There is a button in the status bar for this)
; Evaluating code from settings: 'calva.autoEvaluateCode.onConnect.cljs'
nil
"Please see https://calva.io/output/#about-stdout-in-the-repl-window
about why stdout printed to this file is prepended with `;` to be line comments."
cljs꞉user꞉> 
; Jack-in done.
cljs꞉user꞉> 
; [:app] Compiling ...
; [:app] Build completed. (499 files, 2 compiled, 3 warnings, 0.12s)
; 
; ------ WARNING #1 - :infer-warning ---------------------------------------------
;  File: /Users/vinoth/Documents/workspace/second-brain-studio-webapp/src/second_brain_studio_webapp/prosemirror.cljs:48:29
; --------------------------------------------------------------------------------
;   45 |    [:button {:style {:margin-right "5px"}
;   46 |              :on-click #(when-let [editor @editor-ref]
;   47 |                           (let [tr (.. editor -state -tr)]
;   48 |                             (.setNodeMarkup tr (.. editor -state -selection -$from -pos) "heading" #js {:level 1})
; -----------------------------------^--------------------------------------------
;  Cannot infer target type in expression (. tr setNodeMarkup (.. editor -state -selection -$from -pos) "heading" #object[cljs.tagged_literals.JSValue 0x4d5aa928 "cljs.tagged_literals.JSValue@4d5aa928"])
; --------------------------------------------------------------------------------
;   49 |                             (.dispatch editor tr)))}
;   50 |     "H1"]
;   51 |    ;; Bold Button
;   52 |    [:button {:style {:margin-right "5px"}
; --------------------------------------------------------------------------------
; 
; ------ WARNING #2 - :infer-warning ---------------------------------------------
;  File: /Users/vinoth/Documents/workspace/second-brain-studio-webapp/src/second_brain_studio_webapp/prosemirror.cljs:56:29
; --------------------------------------------------------------------------------
;   53 |              :on-click #(when-let [editor @editor-ref]
;   54 |                           (let [state (.-state editor)
;   55 |                                 tr (.. state -tr)]
;   56 |                             (.addMark tr
; -----------------------------------^--------------------------------------------
;  Cannot infer target type in expression (. tr addMark (.. state -selection -from) (.. state -selection -to) (.. (.-schema state) -marks -strong))
; --------------------------------------------------------------------------------
;   57 |                                       (.. state -selection -from)
;   58 |                                       (.. state -selection -to)
;   59 |                                       (.. (.-schema state) -marks -strong))
;   60 |                             (.dispatch editor tr)))}
; --------------------------------------------------------------------------------
; 
; ------ WARNING #3 - :infer-warning ---------------------------------------------
;  File: /Users/vinoth/Documents/workspace/second-brain-studio-webapp/src/second_brain_studio_webapp/prosemirror.cljs:67:29
; --------------------------------------------------------------------------------
;   64 |              :on-click #(when-let [editor @editor-ref]
;   65 |                           (let [state (.-state editor)
;   66 |                                 tr (.. state -tr)]
;   67 |                             (.addMark tr
; -----------------------------------^--------------------------------------------
;  Cannot infer target type in expression (. tr addMark (.. state -selection -from) (.. state -selection -to) (.. (.-schema state) -marks -em))
; --------------------------------------------------------------------------------
;   68 |                                       (.. state -selection -from)
;   69 |                                       (.. state -selection -to)
;   70 |                                       (.. (.-schema state) -marks -em))
;   71 |                             (.dispatch editor tr)))}
; --------------------------------------------------------------------------------
; [:app] Compiling ...
; [:app] Build failure:
; Resource does not have expected namespace
; [:app] Compiling ...
; [:app] Build completed. (500 files, 3 compiled, 4 warnings, 0.12s)
; 
; ------ WARNING #1 - :infer-warning ---------------------------------------------
;  File: /Users/vinoth/Documents/workspace/second-brain-studio-webapp/src/second_brain_studio_webapp/prosemirror.cljs:48:29
; --------------------------------------------------------------------------------
;   45 |    [:button {:style {:margin-right "5px"}
;   46 |              :on-click #(when-let [editor @editor-ref]
;   47 |                           (let [tr (.. editor -state -tr)]
;   48 |                             (.setNodeMarkup tr (.. editor -state -selection -$from -pos) "heading" #js {:level 1})
; -----------------------------------^--------------------------------------------
;  Cannot infer target type in expression (. tr setNodeMarkup (.. editor -state -selection -$from -pos) "heading" #object[cljs.tagged_literals.JSValue 0x4d5aa928 "cljs.tagged_literals.JSValue@4d5aa928"])
; --------------------------------------------------------------------------------
;   49 |                             (.dispatch editor tr)))}
;   50 |     "H1"]
;   51 |    ;; Bold Button
;   52 |    [:button {:style {:margin-right "5px"}
; --------------------------------------------------------------------------------
; 
; ------ WARNING #2 - :infer-warning ---------------------------------------------
;  File: /Users/vinoth/Documents/workspace/second-brain-studio-webapp/src/second_brain_studio_webapp/prosemirror.cljs:56:29
; --------------------------------------------------------------------------------
;   53 |              :on-click #(when-let [editor @editor-ref]
;   54 |                           (let [state (.-state editor)
;   55 |                                 tr (.. state -tr)]
;   56 |                             (.addMark tr
; -----------------------------------^--------------------------------------------
;  Cannot infer target type in expression (. tr addMark (.. state -selection -from) (.. state -selection -to) (.. (.-schema state) -marks -strong))
; --------------------------------------------------------------------------------
;   57 |                                       (.. state -selection -from)
;   58 |                                       (.. state -selection -to)
;   59 |                                       (.. (.-schema state) -marks -strong))
;   60 |                             (.dispatch editor tr)))}
; --------------------------------------------------------------------------------
; 
; ------ WARNING #3 - :infer-warning ---------------------------------------------
;  File: /Users/vinoth/Documents/workspace/second-brain-studio-webapp/src/second_brain_studio_webapp/prosemirror.cljs:67:29
; --------------------------------------------------------------------------------
;   64 |              :on-click #(when-let [editor @editor-ref]
;   65 |                           (let [state (.-state editor)
;   66 |                                 tr (.. state -tr)]
;   67 |                             (.addMark tr
; -----------------------------------^--------------------------------------------
;  Cannot infer target type in expression (. tr addMark (.. state -selection -from) (.. state -selection -to) (.. (.-schema state) -marks -em))
; --------------------------------------------------------------------------------
;   68 |                                       (.. state -selection -from)
;   69 |                                       (.. state -selection -to)
;   70 |                                       (.. (.-schema state) -marks -em))
;   71 |                             (.dispatch editor tr)))}
; --------------------------------------------------------------------------------
; 
; ------ WARNING #4 - :undeclared-var --------------------------------------------
;  File: /Users/vinoth/Documents/workspace/second-brain-studio-webapp/src/second_brain_studio_webapp/views.cljs:10:32
; --------------------------------------------------------------------------------
;    7 |   
;    8 | (defn main-panel []
;    9 |   (println "main-panel called")
;   10 |   (println "markdown-editor: " markdown-editor)
; --------------------------------------^-----------------------------------------
;  Use of undeclared Var second-brain-studio-webapp.views/markdown-editor
; --------------------------------------------------------------------------------
;   11 |   (let [name (re-frame/subscribe [::subs/name])]
;   12 |     [:div
;   13 |      [:h1 "Hello from " @name]
;   14 |      [prosemirror-editor]
; --------------------------------------------------------------------------------
; [:app] Compiling ...
; [:app] Build completed. (500 files, 2 compiled, 5 warnings, 0.12s)
; 
; ------ WARNING #1 - :infer-warning ---------------------------------------------
;  File: /Users/vinoth/Documents/workspace/second-brain-studio-webapp/src/second_brain_studio_webapp/prosemirror.cljs:48:29
; --------------------------------------------------------------------------------
;   45 |    [:button {:style {:margin-right "5px"}
;   46 |              :on-click #(when-let [editor @editor-ref]
;   47 |                           (let [tr (.. editor -state -tr)]
;   48 |                             (.setNodeMarkup tr (.. editor -state -selection -$from -pos) "heading" #js {:level 1})
; -----------------------------------^--------------------------------------------
;  Cannot infer target type in expression (. tr setNodeMarkup (.. editor -state -selection -$from -pos) "heading" #object[cljs.tagged_literals.JSValue 0x4d5aa928 "cljs.tagged_literals.JSValue@4d5aa928"])
; --------------------------------------------------------------------------------
;   49 |                             (.dispatch editor tr)))}
;   50 |     "H1"]
;   51 |    ;; Bold Button
;   52 |    [:button {:style {:margin-right "5px"}
; --------------------------------------------------------------------------------
; 
; ------ WARNING #2 - :infer-warning ---------------------------------------------
;  File: /Users/vinoth/Documents/workspace/second-brain-studio-webapp/src/second_brain_studio_webapp/prosemirror.cljs:56:29
; --------------------------------------------------------------------------------
;   53 |              :on-click #(when-let [editor @editor-ref]
;   54 |                           (let [state (.-state editor)
;   55 |                                 tr (.. state -tr)]
;   56 |                             (.addMark tr
; -----------------------------------^--------------------------------------------
;  Cannot infer target type in expression (. tr addMark (.. state -selection -from) (.. state -selection -to) (.. (.-schema state) -marks -strong))
; --------------------------------------------------------------------------------
;   57 |                                       (.. state -selection -from)
;   58 |                                       (.. state -selection -to)
;   59 |                                       (.. (.-schema state) -marks -strong))
;   60 |                             (.dispatch editor tr)))}
; --------------------------------------------------------------------------------
; 
; ------ WARNING #3 - :infer-warning ---------------------------------------------
;  File: /Users/vinoth/Documents/workspace/second-brain-studio-webapp/src/second_brain_studio_webapp/prosemirror.cljs:67:29
; --------------------------------------------------------------------------------
;   64 |              :on-click #(when-let [editor @editor-ref]
;   65 |                           (let [state (.-state editor)
;   66 |                                 tr (.. state -tr)]
;   67 |                             (.addMark tr
; -----------------------------------^--------------------------------------------
;  Cannot infer target type in expression (. tr addMark (.. state -selection -from) (.. state -selection -to) (.. (.-schema state) -marks -em))
; --------------------------------------------------------------------------------
;   68 |                                       (.. state -selection -from)
;   69 |                                       (.. state -selection -to)
;   70 |                                       (.. (.-schema state) -marks -em))
;   71 |                             (.dispatch editor tr)))}
; --------------------------------------------------------------------------------
; 
; ------ WARNING #4 - :undeclared-var --------------------------------------------
;  File: /Users/vinoth/Documents/workspace/second-brain-studio-webapp/src/second_brain_studio_webapp/views.cljs:10:32
; --------------------------------------------------------------------------------
;    7 |   
;    8 | (defn main-panel []
;    9 |   (println "main-panel called")
;   10 |   (println "markdown-editor: " markdown-editor)
; --------------------------------------^-----------------------------------------
;  Use of undeclared Var second-brain-studio-webapp.views/markdown-editor
; --------------------------------------------------------------------------------
;   11 |   (let [name (re-frame/subscribe [::subs/name])]
;   12 |     [:div
;   13 |      [:h1 "Hello from " @name]
;   14 |      [markdown-editor]
; --------------------------------------------------------------------------------
; 
; ------ WARNING #5 - :undeclared-var --------------------------------------------
;  File: /Users/vinoth/Documents/workspace/second-brain-studio-webapp/src/second_brain_studio_webapp/views.cljs:14:7
; --------------------------------------------------------------------------------
;   11 |   (let [name (re-frame/subscribe [::subs/name])]
;   12 |     [:div
;   13 |      [:h1 "Hello from " @name]
;   14 |      [markdown-editor]
; -------------^------------------------------------------------------------------
;  Use of undeclared Var second-brain-studio-webapp.views/markdown-editor
; --------------------------------------------------------------------------------
;   15 |     ]))
;   16 | 
;   17 | 
; --------------------------------------------------------------------------------
; [:app] Compiling ...
; [:app] Build completed. (500 files, 2 compiled, 4 warnings, 0.12s)
; 
; ------ WARNING #1 - :infer-warning ---------------------------------------------
;  File: /Users/vinoth/Documents/workspace/second-brain-studio-webapp/src/second_brain_studio_webapp/prosemirror.cljs:48:29
; --------------------------------------------------------------------------------
;   45 |    [:button {:style {:margin-right "5px"}
;   46 |              :on-click #(when-let [editor @editor-ref]
;   47 |                           (let [tr (.. editor -state -tr)]
;   48 |                             (.setNodeMarkup tr (.. editor -state -selection -$from -pos) "heading" #js {:level 1})
; -----------------------------------^--------------------------------------------
;  Cannot infer target type in expression (. tr setNodeMarkup (.. editor -state -selection -$from -pos) "heading" #object[cljs.tagged_literals.JSValue 0x4d5aa928 "cljs.tagged_literals.JSValue@4d5aa928"])
; --------------------------------------------------------------------------------
;   49 |                             (.dispatch editor tr)))}
;   50 |     "H1"]
;   51 |    ;; Bold Button
;   52 |    [:button {:style {:margin-right "5px"}
; --------------------------------------------------------------------------------
; 
; ------ WARNING #2 - :infer-warning ---------------------------------------------
;  File: /Users/vinoth/Documents/workspace/second-brain-studio-webapp/src/second_brain_studio_webapp/prosemirror.cljs:56:29
; --------------------------------------------------------------------------------
;   53 |              :on-click #(when-let [editor @editor-ref]
;   54 |                           (let [state (.-state editor)
;   55 |                                 tr (.. state -tr)]
;   56 |                             (.addMark tr
; -----------------------------------^--------------------------------------------
;  Cannot infer target type in expression (. tr addMark (.. state -selection -from) (.. state -selection -to) (.. (.-schema state) -marks -strong))
; --------------------------------------------------------------------------------
;   57 |                                       (.. state -selection -from)
;   58 |                                       (.. state -selection -to)
;   59 |                                       (.. (.-schema state) -marks -strong))
;   60 |                             (.dispatch editor tr)))}
; --------------------------------------------------------------------------------
; 
; ------ WARNING #3 - :infer-warning ---------------------------------------------
;  File: /Users/vinoth/Documents/workspace/second-brain-studio-webapp/src/second_brain_studio_webapp/prosemirror.cljs:67:29
; --------------------------------------------------------------------------------
;   64 |              :on-click #(when-let [editor @editor-ref]
;   65 |                           (let [state (.-state editor)
;   66 |                                 tr (.. state -tr)]
;   67 |                             (.addMark tr
; -----------------------------------^--------------------------------------------
;  Cannot infer target type in expression (. tr addMark (.. state -selection -from) (.. state -selection -to) (.. (.-schema state) -marks -em))
; --------------------------------------------------------------------------------
;   68 |                                       (.. state -selection -from)
;   69 |                                       (.. state -selection -to)
;   70 |                                       (.. (.-schema state) -marks -em))
;   71 |                             (.dispatch editor tr)))}
; --------------------------------------------------------------------------------
; 
; ------ WARNING #4 - :undeclared-var --------------------------------------------
;  File: /Users/vinoth/Documents/workspace/second-brain-studio-webapp/src/second_brain_studio_webapp/views.cljs:10:32
; --------------------------------------------------------------------------------
;    7 |   
;    8 | (defn main-panel []
;    9 |   (println "main-panel called")
;   10 |   (println "markdown-editor: " markdown-editor)
; --------------------------------------^-----------------------------------------
;  Use of undeclared Var second-brain-studio-webapp.views/markdown-editor
; --------------------------------------------------------------------------------
;   11 |   (let [name (re-frame/subscribe [::subs/name])]
;   12 |     [:div
;   13 |      [:h1 "Hello from " @name]
;   14 |      [markdown-editor/markdown-editor]
; --------------------------------------------------------------------------------
; [:app] Compiling ...
; [:app] Build completed. (500 files, 2 compiled, 3 warnings, 0.11s)
; 
; ------ WARNING #1 - :infer-warning ---------------------------------------------
;  File: /Users/vinoth/Documents/workspace/second-brain-studio-webapp/src/second_brain_studio_webapp/prosemirror.cljs:48:29
; --------------------------------------------------------------------------------
;   45 |    [:button {:style {:margin-right "5px"}
;   46 |              :on-click #(when-let [editor @editor-ref]
;   47 |                           (let [tr (.. editor -state -tr)]
;   48 |                             (.setNodeMarkup tr (.. editor -state -selection -$from -pos) "heading" #js {:level 1})
; -----------------------------------^--------------------------------------------
;  Cannot infer target type in expression (. tr setNodeMarkup (.. editor -state -selection -$from -pos) "heading" #object[cljs.tagged_literals.JSValue 0x4d5aa928 "cljs.tagged_literals.JSValue@4d5aa928"])
; --------------------------------------------------------------------------------
;   49 |                             (.dispatch editor tr)))}
;   50 |     "H1"]
;   51 |    ;; Bold Button
;   52 |    [:button {:style {:margin-right "5px"}
; --------------------------------------------------------------------------------
; 
; ------ WARNING #2 - :infer-warning ---------------------------------------------
;  File: /Users/vinoth/Documents/workspace/second-brain-studio-webapp/src/second_brain_studio_webapp/prosemirror.cljs:56:29
; --------------------------------------------------------------------------------
;   53 |              :on-click #(when-let [editor @editor-ref]
;   54 |                           (let [state (.-state editor)
;   55 |                                 tr (.. state -tr)]
;   56 |                             (.addMark tr
; -----------------------------------^--------------------------------------------
;  Cannot infer target type in expression (. tr addMark (.. state -selection -from) (.. state -selection -to) (.. (.-schema state) -marks -strong))
; --------------------------------------------------------------------------------
;   57 |                                       (.. state -selection -from)
;   58 |                                       (.. state -selection -to)
;   59 |                                       (.. (.-schema state) -marks -strong))
;   60 |                             (.dispatch editor tr)))}
; --------------------------------------------------------------------------------
; 
; ------ WARNING #3 - :infer-warning ---------------------------------------------
;  File: /Users/vinoth/Documents/workspace/second-brain-studio-webapp/src/second_brain_studio_webapp/prosemirror.cljs:67:29
; --------------------------------------------------------------------------------
;   64 |              :on-click #(when-let [editor @editor-ref]
;   65 |                           (let [state (.-state editor)
;   66 |                                 tr (.. state -tr)]
;   67 |                             (.addMark tr
; -----------------------------------^--------------------------------------------
;  Cannot infer target type in expression (. tr addMark (.. state -selection -from) (.. state -selection -to) (.. (.-schema state) -marks -em))
; --------------------------------------------------------------------------------
;   68 |                                       (.. state -selection -from)
;   69 |                                       (.. state -selection -to)
;   70 |                                       (.. (.-schema state) -marks -em))
;   71 |                             (.dispatch editor tr)))}
; --------------------------------------------------------------------------------
; [:app] Compiling ...
; [:app] Build completed. (500 files, 2 compiled, 3 warnings, 0.15s)
; 
; ------ WARNING #1 - :infer-warning ---------------------------------------------
;  File: /Users/vinoth/Documents/workspace/second-brain-studio-webapp/src/second_brain_studio_webapp/prosemirror.cljs:48:29
; --------------------------------------------------------------------------------
;   45 |    [:button {:style {:margin-right "5px"}
;   46 |              :on-click #(when-let [editor @editor-ref]
;   47 |                           (let [tr (.. editor -state -tr)]
;   48 |                             (.setNodeMarkup tr (.. editor -state -selection -$from -pos) "heading" #js {:level 1})
; -----------------------------------^--------------------------------------------
;  Cannot infer target type in expression (. tr setNodeMarkup (.. editor -state -selection -$from -pos) "heading" #object[cljs.tagged_literals.JSValue 0x4d5aa928 "cljs.tagged_literals.JSValue@4d5aa928"])
; --------------------------------------------------------------------------------
;   49 |                             (.dispatch editor tr)))}
;   50 |     "H1"]
;   51 |    ;; Bold Button
;   52 |    [:button {:style {:margin-right "5px"}
; --------------------------------------------------------------------------------
; 
; ------ WARNING #2 - :infer-warning ---------------------------------------------
;  File: /Users/vinoth/Documents/workspace/second-brain-studio-webapp/src/second_brain_studio_webapp/prosemirror.cljs:56:29
; --------------------------------------------------------------------------------
;   53 |              :on-click #(when-let [editor @editor-ref]
;   54 |                           (let [state (.-state editor)
;   55 |                                 tr (.. state -tr)]
;   56 |                             (.addMark tr
; -----------------------------------^--------------------------------------------
;  Cannot infer target type in expression (. tr addMark (.. state -selection -from) (.. state -selection -to) (.. (.-schema state) -marks -strong))
; --------------------------------------------------------------------------------
;   57 |                                       (.. state -selection -from)
;   58 |                                       (.. state -selection -to)
;   59 |                                       (.. (.-schema state) -marks -strong))
;   60 |                             (.dispatch editor tr)))}
; --------------------------------------------------------------------------------
; 
; ------ WARNING #3 - :infer-warning ---------------------------------------------
;  File: /Users/vinoth/Documents/workspace/second-brain-studio-webapp/src/second_brain_studio_webapp/prosemirror.cljs:67:29
; --------------------------------------------------------------------------------
;   64 |              :on-click #(when-let [editor @editor-ref]
;   65 |                           (let [state (.-state editor)
;   66 |                                 tr (.. state -tr)]
;   67 |                             (.addMark tr
; -----------------------------------^--------------------------------------------
;  Cannot infer target type in expression (. tr addMark (.. state -selection -from) (.. state -selection -to) (.. (.-schema state) -marks -em))
; --------------------------------------------------------------------------------
;   68 |                                       (.. state -selection -from)
;   69 |                                       (.. state -selection -to)
;   70 |                                       (.. (.-schema state) -marks -em))
;   71 |                             (.dispatch editor tr)))}
; --------------------------------------------------------------------------------
; [:app] Compiling ...
; [:app] Build completed. (500 files, 2 compiled, 3 warnings, 0.13s)
; 
; ------ WARNING #1 - :infer-warning ---------------------------------------------
;  File: /Users/vinoth/Documents/workspace/second-brain-studio-webapp/src/second_brain_studio_webapp/prosemirror.cljs:48:29
; --------------------------------------------------------------------------------
;   45 |    [:button {:style {:margin-right "5px"}
;   46 |              :on-click #(when-let [editor @editor-ref]
;   47 |                           (let [tr (.. editor -state -tr)]
;   48 |                             (.setNodeMarkup tr (.. editor -state -selection -$from -pos) "heading" #js {:level 1})
; -----------------------------------^--------------------------------------------
;  Cannot infer target type in expression (. tr setNodeMarkup (.. editor -state -selection -$from -pos) "heading" #object[cljs.tagged_literals.JSValue 0x4d5aa928 "cljs.tagged_literals.JSValue@4d5aa928"])
; --------------------------------------------------------------------------------
;   49 |                             (.dispatch editor tr)))}
;   50 |     "H1"]
;   51 |    ;; Bold Button
;   52 |    [:button {:style {:margin-right "5px"}
; --------------------------------------------------------------------------------
; 
; ------ WARNING #2 - :infer-warning ---------------------------------------------
;  File: /Users/vinoth/Documents/workspace/second-brain-studio-webapp/src/second_brain_studio_webapp/prosemirror.cljs:56:29
; --------------------------------------------------------------------------------
;   53 |              :on-click #(when-let [editor @editor-ref]
;   54 |                           (let [state (.-state editor)
;   55 |                                 tr (.. state -tr)]
;   56 |                             (.addMark tr
; -----------------------------------^--------------------------------------------
;  Cannot infer target type in expression (. tr addMark (.. state -selection -from) (.. state -selection -to) (.. (.-schema state) -marks -strong))
; --------------------------------------------------------------------------------
;   57 |                                       (.. state -selection -from)
;   58 |                                       (.. state -selection -to)
;   59 |                                       (.. (.-schema state) -marks -strong))
;   60 |                             (.dispatch editor tr)))}
; --------------------------------------------------------------------------------
; 
; ------ WARNING #3 - :infer-warning ---------------------------------------------
;  File: /Users/vinoth/Documents/workspace/second-brain-studio-webapp/src/second_brain_studio_webapp/prosemirror.cljs:67:29
; --------------------------------------------------------------------------------
;   64 |              :on-click #(when-let [editor @editor-ref]
;   65 |                           (let [state (.-state editor)
;   66 |                                 tr (.. state -tr)]
;   67 |                             (.addMark tr
; -----------------------------------^--------------------------------------------
;  Cannot infer target type in expression (. tr addMark (.. state -selection -from) (.. state -selection -to) (.. (.-schema state) -marks -em))
; --------------------------------------------------------------------------------
;   68 |                                       (.. state -selection -from)
;   69 |                                       (.. state -selection -to)
;   70 |                                       (.. (.-schema state) -marks -em))
;   71 |                             (.dispatch editor tr)))}
; --------------------------------------------------------------------------------
; Jacking in...
; Connecting using "shadow-cljs" project type.
; You can make Calva auto-select this.
;   - See https://calva.io/connect-sequences/
; 

; Starting Jack-in: (cd /Users/vinoth/Documents/workspace/second-brain-studio-webapp; npx shadow-cljs -d cider/cider-nrepl:0.47.1 watch :app)
; Using host:port localhost:8777 ...
; Hooking up nREPL sessions ...
; Connected session: clj
; Evaluating code from settings: 'calva.autoEvaluateCode.onConnect.clj'
nil
clj꞉shadow.user꞉> 
; Creating cljs repl session...
; Connecting cljs repl: shadow-cljs...
; Connected session: cljs, repl: :app
; TIPS: You can choose which REPL to use (clj or cljs):
;    *Calva: Toggle REPL connection*
;    (There is a button in the status bar for this)
; Evaluating code from settings: 'calva.autoEvaluateCode.onConnect.cljs'
nil
"Please see https://calva.io/output/#about-stdout-in-the-repl-window
about why stdout printed to this file is prepended with `;` to be line comments."
clj꞉user꞉> 
; Jack-in done.
clj꞉user꞉> 
; [:app] Compiling ...
; [:app] Build completed. (492 files, 2 compiled, 0 warnings, 0.15s)
; [:app] Compiling ...
; [:app] Build completed. (511 files, 3 compiled, 0 warnings, 1.67s)
; [:app] Compiling ...
; [:app] Build completed. (498 files, 2 compiled, 1 warnings, 0.14s)
; 
; ------ WARNING #1 - :infer-warning ---------------------------------------------
;  File: /Users/vinoth/Documents/workspace/second-brain-studio-webapp/src/second_brain_studio_webapp/markdown_editor.cljs:24:70
; --------------------------------------------------------------------------------
;   21 |                           :extensions #js [(markdown)
;   22 |                                            (.of view/updateListener
;   23 |                                                 #js {:update (fn [update]
;   24 |                                                                (when (.-docChanged update)
; ----------------------------------------------------------------------------^---
;  Cannot infer target type in expression (. update -docChanged)
; --------------------------------------------------------------------------------
;   25 |                                                                  (reset! content (.. update -state -doc toString))))})]})
;   26 |               view (EditorView. #js {:state state :parent node})]
;   27 |           (reset! editor-instance view))))
;   28 | 
; --------------------------------------------------------------------------------
; [:app] Compiling ...
; [:app] Build completed. (511 files, 2 compiled, 1 warnings, 0.16s)
; 
; ------ WARNING #1 - :infer-warning ---------------------------------------------
;  File: /Users/vinoth/Documents/workspace/second-brain-studio-webapp/src/second_brain_studio_webapp/markdown_editor.cljs:25:70
; --------------------------------------------------------------------------------
;   22 |                           :extensions #js [(markdown)
;   23 |                                            (.of view/updateListener
;   24 |                                                 #js {:update (fn [update]
;   25 |                                                                (when (.-docChanged update)
; ----------------------------------------------------------------------------^---
;  Cannot infer target type in expression (. update -docChanged)
; --------------------------------------------------------------------------------
;   26 |                                                                  (reset! content (.. update -state -doc toString))))})]})
;   27 |               view (EditorView. #js {:state state :parent node})]
;   28 |           (reset! editor-instance view))))
;   29 | 
; --------------------------------------------------------------------------------
; [:app] Compiling ...
; [:app] Build completed. (511 files, 2 compiled, 1 warnings, 0.13s)
; 
; ------ WARNING #1 - :infer-warning ---------------------------------------------
;  File: /Users/vinoth/Documents/workspace/second-brain-studio-webapp/src/second_brain_studio_webapp/markdown_editor.cljs:33:70
; --------------------------------------------------------------------------------
;   30 |                           :extensions #js [(markdown)
;   31 |                                            (.of view/updateListener
;   32 |                                                 #js {:update (fn [update]
;   33 |                                                                (when (.-docChanged update)
; ----------------------------------------------------------------------------^---
;  Cannot infer target type in expression (. update -docChanged)
; --------------------------------------------------------------------------------
;   34 |                                                                  (reset! content (.. update -state -doc toString))))})]})
;   35 |               view (EditorView. #js {:state state :parent node})]
;   36 |           (reset! editor-instance view))))
;   37 | 
; --------------------------------------------------------------------------------
; [:app] Compiling ...
; [:app] Build completed. (492 files, 2 compiled, 0 warnings, 0.13s)
; [:app] Compiling ...
; [:app] Build completed. (492 files, 2 compiled, 0 warnings, 0.13s)
; [:app] Compiling ...
; [:app] Build completed. (492 files, 2 compiled, 0 warnings, 0.12s)
; [:app] Compiling ...
; [:app] Build completed. (492 files, 2 compiled, 0 warnings, 0.11s)
