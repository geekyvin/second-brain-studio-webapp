; This is the Calva REPL Window.
; It's just a file, really, with some special treatment from Calva.
; Use it as a REPL input prompt if you like. (When the REPL is connected.)
; TIPS: The keyboard shortcut `ctrl+alt+o r` shows and focuses this window
; Please see https://calva.io/repl-window/ for more info.
; Happy coding! ♥️

; TIPS: As with any Clojure file when the REPL is connected:
; - `alt+enter` evaluates the current top level form.
; - `ctrl+enter` evaluates the current form.
; Special for this file:
; - `alt+up` and `alt+down` traverse up and down the REPL command history
;    when the cursor is after the last contents at the prompt
; 
; See also the Calva Inspector: https://calva.io/inspector/

PLEASE NOTE
We will update the default location of this file.
The new default location will be
  "<projectRootPath>/.calva/repl.calva-repl"
For now the legacy path is used by default.
To give yourself a smooth transition, you can opt in
to the change, by configuring this setting as false:
  "calva.useLegacyReplWindowPath"
and then add "**/.calva/repl.calva-repl" to your ".gitignore" file.


This file is configured as the output destination for all REPL output.
You can configure this with the setting:
  "calva.outputDestinations"


; Jacking in...
; Connecting using "shadow-cljs" project type.
; You can make Calva auto-select this.
;   - See https://calva.io/connect-sequences/
; 

; Starting Jack-in: (cd /Users/vinoth/Documents/workspace/second-brain-studio-webapp; npx shadow-cljs -d cider/cider-nrepl:0.47.1 watch :app)
; Using host:port localhost:8777 ...
; Hooking up nREPL sessions ...
; Connected session: clj
; Evaluating code from settings: 'calva.autoEvaluateCode.onConnect.clj'
nil
clj꞉shadow.user꞉> 
; Creating cljs repl session...
; Connecting cljs repl: shadow-cljs...
; Error while connecting cljs REPL: Error: User cancelled waiting for shadow-cljs runtimes.
; Jack-in done.
clj꞉shadow.user꞉> 
; nREPL Connection was closed
; Jacking in...
; Connecting using "shadow-cljs" project type.
; You can make Calva auto-select this.
;   - See https://calva.io/connect-sequences/
; 

; Starting Jack-in: (cd /Users/vinoth/Documents/workspace/second-brain-studio-webapp; npx shadow-cljs -d cider/cider-nrepl:0.47.1 watch :app)
; Using host:port localhost:8777 ...
; Hooking up nREPL sessions ...
; Connected session: clj
; Evaluating code from settings: 'calva.autoEvaluateCode.onConnect.clj'
nil
clj꞉shadow.user꞉> 
; Creating cljs repl session...
; Connecting cljs repl: shadow-cljs...
; Connected session: cljs, repl: :app
; TIPS: You can choose which REPL to use (clj or cljs):
;    *Calva: Toggle REPL connection*
;    (There is a button in the status bar for this)
; Evaluating code from settings: 'calva.autoEvaluateCode.onConnect.cljs'
nil
"Please see https://calva.io/output/#about-stdout-in-the-repl-window
about why stdout printed to this file is prepended with `;` to be line comments."
cljs꞉user꞉> 
; Jack-in done.
cljs꞉user꞉> 
; nREPL Connection was closed
; [:app] Compiling ...
; [:app] Build completed. (478 files, 2 compiled, 0 warnings, 0.16s)
; [:app] Compiling ...
; [:app] Build completed. (485 files, 3 compiled, 1 warnings, 0.15s)
; 
; ------ WARNING #1 - :undeclared-var --------------------------------------------
;  File: /Users/vinoth/Documents/workspace/second-brain-studio-webapp/src/second_brain_studio_webapp/prosemirror.cljs:18:26
; --------------------------------------------------------------------------------
;   15 |     (r/create-class
;   16 |      {:component-did-mount
;   17 |       (fn [this]
;   18 |         (when-let [node (r/dom-node this)]
; --------------------------------^-----------------------------------------------
;  Use of undeclared Var reagent.core/dom-node
; --------------------------------------------------------------------------------
;   19 |           (reset! editor-ref (create-editor node))))
;   20 |       :component-will-unmount
;   21 |       (fn [_]
;   22 |         (when-let [editor @editor-ref]
; --------------------------------------------------------------------------------
; [:app] Compiling ...
; [:app] Build completed. (485 files, 2 compiled, 1 warnings, 0.12s)
; 
; ------ WARNING #1 - :undeclared-var --------------------------------------------
;  File: /Users/vinoth/Documents/workspace/second-brain-studio-webapp/src/second_brain_studio_webapp/prosemirror.cljs:18:26
; --------------------------------------------------------------------------------
;   15 |     (r/create-class
;   16 |      {:component-did-mount
;   17 |       (fn [this]
;   18 |         (when-let [node (r/dom-node this)]
; --------------------------------^-----------------------------------------------
;  Use of undeclared Var reagent.core/dom-node
; --------------------------------------------------------------------------------
;   19 |           (reset! editor-ref (create-editor node))))
;   20 |       :component-will-unmount
;   21 |       (fn [_]
;   22 |         (when-let [editor @editor-ref]
; --------------------------------------------------------------------------------
; [:app] Compiling ...
; [:app] Build completed. (485 files, 2 compiled, 1 warnings, 0.18s)
; 
; ------ WARNING #1 - :undeclared-var --------------------------------------------
;  File: /Users/vinoth/Documents/workspace/second-brain-studio-webapp/src/second_brain_studio_webapp/prosemirror.cljs:18:26
; --------------------------------------------------------------------------------
;   15 |     (r/create-class
;   16 |      {:component-did-mount
;   17 |       (fn [this]
;   18 |         (when-let [node (r/dom-node this)]
; --------------------------------^-----------------------------------------------
;  Use of undeclared Var reagent.core/dom-node
; --------------------------------------------------------------------------------
;   19 |           (reset! editor-ref (create-editor node))))
;   20 |       :component-will-unmount
;   21 |       (fn [_]
;   22 |         (when-let [editor @editor-ref]
; --------------------------------------------------------------------------------
; [:app] Compiling ...
; [:app] Build completed. (485 files, 2 compiled, 1 warnings, 0.11s)
; 
; ------ WARNING #1 - :undeclared-var --------------------------------------------
;  File: /Users/vinoth/Documents/workspace/second-brain-studio-webapp/src/second_brain_studio_webapp/prosemirror.cljs:18:26
; --------------------------------------------------------------------------------
;   15 |     (r/create-class
;   16 |      {:component-did-mount
;   17 |       (fn [this]
;   18 |         (when-let [node (r/dom-node this)]
; --------------------------------^-----------------------------------------------
;  Use of undeclared Var reagent.core/dom-node
; --------------------------------------------------------------------------------
;   19 |           (reset! editor-ref (create-editor node))))
;   20 |       :component-will-unmount
;   21 |       (fn [_]
;   22 |         (when-let [editor @editor-ref]
; --------------------------------------------------------------------------------
; [:app] Compiling ...
; [:app] Build completed. (485 files, 2 compiled, 1 warnings, 0.12s)
; 
; ------ WARNING #1 - :undeclared-var --------------------------------------------
;  File: /Users/vinoth/Documents/workspace/second-brain-studio-webapp/src/second_brain_studio_webapp/prosemirror.cljs:18:26
; --------------------------------------------------------------------------------
;   15 |     (r/create-class
;   16 |      {:component-did-mount
;   17 |       (fn [this]
;   18 |         (when-let [node (r/dom-node this)]
; --------------------------------^-----------------------------------------------
;  Use of undeclared Var reagent.core/dom-node
; --------------------------------------------------------------------------------
;   19 |           (reset! editor-ref (create-editor node))))
;   20 |       :component-will-unmount
;   21 |       (fn [_]
;   22 |         (when-let [editor @editor-ref]
; --------------------------------------------------------------------------------
; [:app] Compiling ...
; [:app] Build completed. (485 files, 2 compiled, 1 warnings, 0.20s)
; 
; ------ WARNING #1 - :undeclared-var --------------------------------------------
;  File: /Users/vinoth/Documents/workspace/second-brain-studio-webapp/src/second_brain_studio_webapp/prosemirror.cljs:18:26
; --------------------------------------------------------------------------------
;   15 |     (r/create-class
;   16 |      {:component-did-mount
;   17 |       (fn [this]
;   18 |         (when-let [node (r/dom-node this)]
; --------------------------------^-----------------------------------------------
;  Use of undeclared Var reagent.core/dom-node
; --------------------------------------------------------------------------------
;   19 |           (reset! editor-ref (create-editor node))))
;   20 |       :component-will-unmount
;   21 |       (fn [_]
;   22 |         (when-let [editor @editor-ref]
; --------------------------------------------------------------------------------
; [:app] Compiling ...
; [:app] Build completed. (485 files, 2 compiled, 1 warnings, 0.14s)
; 
; ------ WARNING #1 - :undeclared-var --------------------------------------------
;  File: /Users/vinoth/Documents/workspace/second-brain-studio-webapp/src/second_brain_studio_webapp/prosemirror.cljs:18:26
; --------------------------------------------------------------------------------
;   15 |     (r/create-class
;   16 |      {:component-did-mount
;   17 |       (fn [this]
;   18 |         (when-let [node (r/dom-node this)]
; --------------------------------^-----------------------------------------------
;  Use of undeclared Var reagent.core/dom-node
; --------------------------------------------------------------------------------
;   19 |           (reset! editor-ref (create-editor node))))
;   20 |       :component-will-unmount
;   21 |       (fn [_]
;   22 |         (when-let [editor @editor-ref]
; --------------------------------------------------------------------------------
; [:app] Compiling ...
; [:app] Build completed. (485 files, 2 compiled, 1 warnings, 0.18s)
; 
; ------ WARNING #1 - :undeclared-var --------------------------------------------
;  File: /Users/vinoth/Documents/workspace/second-brain-studio-webapp/src/second_brain_studio_webapp/prosemirror.cljs:18:26
; --------------------------------------------------------------------------------
;   15 |     (r/create-class
;   16 |      {:component-did-mount
;   17 |       (fn [this]
;   18 |         (when-let [node (r/dom-node this)]
; --------------------------------^-----------------------------------------------
;  Use of undeclared Var reagent.core/dom-node
; --------------------------------------------------------------------------------
;   19 |           (reset! editor-ref (create-editor node))))
;   20 |       :component-will-unmount
;   21 |       (fn [_]
;   22 |         (when-let [editor @editor-ref]
; --------------------------------------------------------------------------------
; [:app] Compiling ...
; [:app] Build completed. (485 files, 2 compiled, 0 warnings, 0.12s)
; [:app] Compiling ...
; [:app] Build completed. (485 files, 2 compiled, 1 warnings, 0.14s)
; 
; ------ WARNING #1 - :undeclared-var --------------------------------------------
;  File: /Users/vinoth/Documents/workspace/second-brain-studio-webapp/src/second_brain_studio_webapp/prosemirror.cljs:10:21
; --------------------------------------------------------------------------------
;    7 |    ["prosemirror-schema-basic" :refer [schema]]))
;    8 | 
;    9 | (defn create-editor [element]
;   10 |   (let [doc (.parse markdownParser schema "# Your Markdown Heading")]
; ---------------------------^----------------------------------------------------
;  Use of undeclared Var second-brain-studio-webapp.prosemirror/markdownParser
; --------------------------------------------------------------------------------
;   11 |      (EditorView. element #js {:state (.create EditorState #js {:doc doc
;   12 |                                                                 :schema schema})})))
;   13 | 
;   14 | (defn prosemirror-editor []
; --------------------------------------------------------------------------------
; [:app] Compiling ...
; [:app] Build completed. (499 files, 2 compiled, 0 warnings, 0.14s)
; [:app] Compiling ...
; [:app] Build completed. (499 files, 2 compiled, 1 warnings, 0.11s)
; 
; ------ WARNING #1 - :undeclared-var --------------------------------------------
;  File: /Users/vinoth/Documents/workspace/second-brain-studio-webapp/src/second_brain_studio_webapp/prosemirror.cljs:32:32
; --------------------------------------------------------------------------------
;   29 |          [:div#editor {:ref #(reset! dom-node %)
;   30 |                        :style {:border "1px solid #ccc"
;   31 |                                :min-height "300px"}}]
;   32 |          [:button {:on-click #(save-content @editor-ref)} "Save Content"]])})))
; --------------------------------------^-----------------------------------------
;  Use of undeclared Var second-brain-studio-webapp.prosemirror/save-content
; --------------------------------------------------------------------------------
;   33 | 
;   34 | 
; --------------------------------------------------------------------------------
; [:app] Compiling ...
; [:app] Build completed. (499 files, 2 compiled, 1 warnings, 0.13s)
; 
; ------ WARNING #1 - :undeclared-var --------------------------------------------
;  File: /Users/vinoth/Documents/workspace/second-brain-studio-webapp/src/second_brain_studio_webapp/prosemirror.cljs:13:19
; --------------------------------------------------------------------------------
;   10 | (def app-db (r/atom {:editor-content nil}))
;   11 | 
;   12 | (defn save-content [editor-view]
;   13 |   (let [markdown (get-markdown editor-view)]
; -------------------------^------------------------------------------------------
;  Use of undeclared Var second-brain-studio-webapp.prosemirror/get-markdown
; --------------------------------------------------------------------------------
;   14 |     (reset! app-db {:editor-content markdown})))
;   15 | 
;   16 | (defn create-editor [element]
;   17 |   (let [doc (.parse markdownParser schema "# Your Markdown Heading")]
; --------------------------------------------------------------------------------
; [:app] Compiling ...
; [:app] Build completed. (499 files, 2 compiled, 1 warnings, 0.14s)
; 
; ------ WARNING #1 - :undeclared-var --------------------------------------------
;  File: /Users/vinoth/Documents/workspace/second-brain-studio-webapp/src/second_brain_studio_webapp/prosemirror.cljs:13:19
; --------------------------------------------------------------------------------
;   10 | (def app-db (r/atom {:editor-content nil}))
;   11 | 
;   12 | (defn save-content [editor-view]
;   13 |   (let [markdown (get-markdown editor-view)]
; -------------------------^------------------------------------------------------
;  Use of undeclared Var second-brain-studio-webapp.prosemirror/get-markdown
; --------------------------------------------------------------------------------
;   14 |     (reset! app-db {:editor-content markdown})))
;   15 | 
;   16 | (defn create-editor [element]
;   17 |   (let [doc (.parse markdownParser schema "# Your Markdown Heading")]
; --------------------------------------------------------------------------------
; [:app] Compiling ...
; [:app] Build completed. (499 files, 2 compiled, 0 warnings, 0.13s)
; [:app] Compiling ...
; [:app] Build completed. (499 files, 2 compiled, 0 warnings, 0.12s)
; [:app] Compiling ...
; [:app] Build completed. (499 files, 2 compiled, 0 warnings, 0.12s)
; [:app] Compiling ...
; [:app] Build completed. (499 files, 2 compiled, 0 warnings, 0.10s)
; [:app] Compiling ...
; [:app] Build completed. (499 files, 2 compiled, 2 warnings, 0.12s)
; 
; ------ WARNING #1 - :undeclared-var --------------------------------------------
;  File: /Users/vinoth/Documents/workspace/second-brain-studio-webapp/src/second_brain_studio_webapp/prosemirror.cljs:12:3
; --------------------------------------------------------------------------------
;    9 | 
;   10 | ;; Initialize markdown-parser properly
;   11 | (def markdown-parser
;   12 |   (MarkdownParser. schema markdownSyntax))
; ---------^----------------------------------------------------------------------
;  Use of undeclared Var second-brain-studio-webapp.prosemirror/MarkdownParser
; --------------------------------------------------------------------------------
;   13 | 
;   14 | (defn create-editor [element]
;   15 |   ;; Parse initial markdown content
;   16 |   (let [doc (.parse markdown-parser "# Initial Markdown Content")
; --------------------------------------------------------------------------------
; 
; ------ WARNING #2 - :undeclared-var --------------------------------------------
;  File: /Users/vinoth/Documents/workspace/second-brain-studio-webapp/src/second_brain_studio_webapp/prosemirror.cljs:12:27
; --------------------------------------------------------------------------------
;    9 | 
;   10 | ;; Initialize markdown-parser properly
;   11 | (def markdown-parser
;   12 |   (MarkdownParser. schema markdownSyntax))
; ---------------------------------^----------------------------------------------
;  Use of undeclared Var second-brain-studio-webapp.prosemirror/markdownSyntax
; --------------------------------------------------------------------------------
;   13 | 
;   14 | (defn create-editor [element]
;   15 |   ;; Parse initial markdown content
;   16 |   (let [doc (.parse markdown-parser "# Initial Markdown Content")
; --------------------------------------------------------------------------------
; [:app] Compiling ...
; [:app] Build completed. (499 files, 2 compiled, 1 warnings, 0.10s)
; 
; ------ WARNING #1 - :undeclared-var --------------------------------------------
;  File: /Users/vinoth/Documents/workspace/second-brain-studio-webapp/src/second_brain_studio_webapp/prosemirror.cljs:12:27
; --------------------------------------------------------------------------------
;    9 | 
;   10 | ;; Initialize markdown-parser properly
;   11 | (def markdown-parser
;   12 |   (MarkdownParser. schema markdownSyntax))
; ---------------------------------^----------------------------------------------
;  Use of undeclared Var second-brain-studio-webapp.prosemirror/markdownSyntax
; --------------------------------------------------------------------------------
;   13 | 
;   14 | (defn create-editor [element]
;   15 |   ;; Parse initial markdown content
;   16 |   (let [doc (.parse markdown-parser "# Initial Markdown Content")
; --------------------------------------------------------------------------------
; [:app] Compiling ...
; [:app] Build completed. (499 files, 2 compiled, 0 warnings, 0.10s)
; [:app] Compiling ...
; [:app] Build completed. (499 files, 2 compiled, 0 warnings, 0.11s)
; [:app] Compiling ...
; [:app] Build completed. (499 files, 2 compiled, 0 warnings, 0.15s)
; [:app] Compiling ...
; [:app] Build completed. (499 files, 2 compiled, 0 warnings, 0.12s)
; [:app] Compiling ...
; [:app] Build completed. (499 files, 2 compiled, 0 warnings, 0.15s)
; [:app] Compiling ...
; [:app] Build completed. (499 files, 2 compiled, 0 warnings, 0.12s)
; [:app] Compiling ...
; [:app] Build completed. (499 files, 2 compiled, 0 warnings, 0.10s)
; [:app] Compiling ...
; [:app] Build completed. (499 files, 2 compiled, 4 warnings, 0.16s)
; 
; ------ WARNING #1 - :infer-warning ---------------------------------------------
;  File: /Users/vinoth/Documents/workspace/second-brain-studio-webapp/src/second_brain_studio_webapp/prosemirror.cljs:46:27
; --------------------------------------------------------------------------------
;   43 | (defn toolbar [editor-ref]
;   44 |   [:div.toolbar
;   45 |    [:button {:on-click #(when-let [editor @editor-ref]
;   46 |                           (.. editor -state -tr
; ---------------------------------^----------------------------------------------
;  Cannot infer target type in expression (. (. (. editor -state) -tr) (.setNodeMarkup (.. editor -state -selection -$from -pos) "heading" #object[cljs.tagged_literals.JSValue 0x5145f108 "cljs.tagged_literals.JSValue@5145f108"]))
; --------------------------------------------------------------------------------
;   47 |                               (.setNodeMarkup (.. editor -state -selection -$from -pos) "heading" #js {:level 1})
;   48 |                               (.dispatch editor)))} "H1"]
;   49 |    [:button {:on-click #(when-let [editor @editor-ref]
;   50 |                           (.. editor -state -tr
; --------------------------------------------------------------------------------
; 
; ------ WARNING #2 - :infer-warning ---------------------------------------------
;  File: /Users/vinoth/Documents/workspace/second-brain-studio-webapp/src/second_brain_studio_webapp/prosemirror.cljs:46:27
; --------------------------------------------------------------------------------
;   43 | (defn toolbar [editor-ref]
;   44 |   [:div.toolbar
;   45 |    [:button {:on-click #(when-let [editor @editor-ref]
;   46 |                           (.. editor -state -tr
; ---------------------------------^----------------------------------------------
;  Cannot infer target type in expression (. (. (. (. editor -state) -tr) (.setNodeMarkup (.. editor -state -selection -$from -pos) "heading" #object[cljs.tagged_literals.JSValue 0x5145f108 "cljs.tagged_literals.JSValue@5145f108"])) (.dispatch editor))
; --------------------------------------------------------------------------------
;   47 |                               (.setNodeMarkup (.. editor -state -selection -$from -pos) "heading" #js {:level 1})
;   48 |                               (.dispatch editor)))} "H1"]
;   49 |    [:button {:on-click #(when-let [editor @editor-ref]
;   50 |                           (.. editor -state -tr
; --------------------------------------------------------------------------------
; 
; ------ WARNING #3 - :infer-warning ---------------------------------------------
;  File: /Users/vinoth/Documents/workspace/second-brain-studio-webapp/src/second_brain_studio_webapp/prosemirror.cljs:50:27
; --------------------------------------------------------------------------------
;   47 |                               (.setNodeMarkup (.. editor -state -selection -$from -pos) "heading" #js {:level 1})
;   48 |                               (.dispatch editor)))} "H1"]
;   49 |    [:button {:on-click #(when-let [editor @editor-ref]
;   50 |                           (.. editor -state -tr
; ---------------------------------^----------------------------------------------
;  Cannot infer target type in expression (. (. (. editor -state) -tr) (.addMark (.. editor -state -selection -$from -pos) (.. editor -state -selection -$to -pos) (.. (.-schema editor) -marks -strong)))
; --------------------------------------------------------------------------------
;   51 |                               (.addMark (.. editor -state -selection -$from -pos)
;   52 |                                         (.. editor -state -selection -$to -pos)
;   53 |                                         (.. (.-schema editor) -marks -strong))
;   54 |                               (.dispatch editor)))} "Bold"]])
; --------------------------------------------------------------------------------
; 
; ------ WARNING #4 - :infer-warning ---------------------------------------------
;  File: /Users/vinoth/Documents/workspace/second-brain-studio-webapp/src/second_brain_studio_webapp/prosemirror.cljs:50:27
; --------------------------------------------------------------------------------
;   47 |                               (.setNodeMarkup (.. editor -state -selection -$from -pos) "heading" #js {:level 1})
;   48 |                               (.dispatch editor)))} "H1"]
;   49 |    [:button {:on-click #(when-let [editor @editor-ref]
;   50 |                           (.. editor -state -tr
; ---------------------------------^----------------------------------------------
;  Cannot infer target type in expression (. (. (. (. editor -state) -tr) (.addMark (.. editor -state -selection -$from -pos) (.. editor -state -selection -$to -pos) (.. (.-schema editor) -marks -strong))) (.dispatch editor))
; --------------------------------------------------------------------------------
;   51 |                               (.addMark (.. editor -state -selection -$from -pos)
;   52 |                                         (.. editor -state -selection -$to -pos)
;   53 |                                         (.. (.-schema editor) -marks -strong))
;   54 |                               (.dispatch editor)))} "Bold"]])
; --------------------------------------------------------------------------------
; [:app] Compiling ...
; [:app] Build completed. (499 files, 2 compiled, 4 warnings, 0.11s)
; 
; ------ WARNING #1 - :infer-warning ---------------------------------------------
;  File: /Users/vinoth/Documents/workspace/second-brain-studio-webapp/src/second_brain_studio_webapp/prosemirror.cljs:46:27
; --------------------------------------------------------------------------------
;   43 | (defn toolbar [editor-ref]
;   44 |   [:div.toolbar
;   45 |    [:button {:on-click #(when-let [editor @editor-ref]
;   46 |                           (.. editor -state -tr
; ---------------------------------^----------------------------------------------
;  Cannot infer target type in expression (. (. (. editor -state) -tr) (.setNodeMarkup (.. editor -state -selection -$from -pos) "heading" #object[cljs.tagged_literals.JSValue 0x5145f108 "cljs.tagged_literals.JSValue@5145f108"]))
; --------------------------------------------------------------------------------
;   47 |                               (.setNodeMarkup (.. editor -state -selection -$from -pos) "heading" #js {:level 1})
;   48 |                               (.dispatch editor)))} "H1"]
;   49 |    [:button {:on-click #(when-let [editor @editor-ref]
;   50 |                           (.. editor -state -tr
; --------------------------------------------------------------------------------
; 
; ------ WARNING #2 - :infer-warning ---------------------------------------------
;  File: /Users/vinoth/Documents/workspace/second-brain-studio-webapp/src/second_brain_studio_webapp/prosemirror.cljs:46:27
; --------------------------------------------------------------------------------
;   43 | (defn toolbar [editor-ref]
;   44 |   [:div.toolbar
;   45 |    [:button {:on-click #(when-let [editor @editor-ref]
;   46 |                           (.. editor -state -tr
; ---------------------------------^----------------------------------------------
;  Cannot infer target type in expression (. (. (. (. editor -state) -tr) (.setNodeMarkup (.. editor -state -selection -$from -pos) "heading" #object[cljs.tagged_literals.JSValue 0x5145f108 "cljs.tagged_literals.JSValue@5145f108"])) (.dispatch editor))
; --------------------------------------------------------------------------------
;   47 |                               (.setNodeMarkup (.. editor -state -selection -$from -pos) "heading" #js {:level 1})
;   48 |                               (.dispatch editor)))} "H1"]
;   49 |    [:button {:on-click #(when-let [editor @editor-ref]
;   50 |                           (.. editor -state -tr
; --------------------------------------------------------------------------------
; 
; ------ WARNING #3 - :infer-warning ---------------------------------------------
;  File: /Users/vinoth/Documents/workspace/second-brain-studio-webapp/src/second_brain_studio_webapp/prosemirror.cljs:50:27
; --------------------------------------------------------------------------------
;   47 |                               (.setNodeMarkup (.. editor -state -selection -$from -pos) "heading" #js {:level 1})
;   48 |                               (.dispatch editor)))} "H1"]
;   49 |    [:button {:on-click #(when-let [editor @editor-ref]
;   50 |                           (.. editor -state -tr
; ---------------------------------^----------------------------------------------
;  Cannot infer target type in expression (. (. (. editor -state) -tr) (.addMark (.. editor -state -selection -$from -pos) (.. editor -state -selection -$to -pos) (.. (.-schema editor) -marks -strong)))
; --------------------------------------------------------------------------------
;   51 |                               (.addMark (.. editor -state -selection -$from -pos)
;   52 |                                         (.. editor -state -selection -$to -pos)
;   53 |                                         (.. (.-schema editor) -marks -strong))
;   54 |                               (.dispatch editor)))} "Bold"]])
; --------------------------------------------------------------------------------
; 
; ------ WARNING #4 - :infer-warning ---------------------------------------------
;  File: /Users/vinoth/Documents/workspace/second-brain-studio-webapp/src/second_brain_studio_webapp/prosemirror.cljs:50:27
; --------------------------------------------------------------------------------
;   47 |                               (.setNodeMarkup (.. editor -state -selection -$from -pos) "heading" #js {:level 1})
;   48 |                               (.dispatch editor)))} "H1"]
;   49 |    [:button {:on-click #(when-let [editor @editor-ref]
;   50 |                           (.. editor -state -tr
; ---------------------------------^----------------------------------------------
;  Cannot infer target type in expression (. (. (. (. editor -state) -tr) (.addMark (.. editor -state -selection -$from -pos) (.. editor -state -selection -$to -pos) (.. (.-schema editor) -marks -strong))) (.dispatch editor))
; --------------------------------------------------------------------------------
;   51 |                               (.addMark (.. editor -state -selection -$from -pos)
;   52 |                                         (.. editor -state -selection -$to -pos)
;   53 |                                         (.. (.-schema editor) -marks -strong))
;   54 |                               (.dispatch editor)))} "Bold"]])
; --------------------------------------------------------------------------------
; [:app] Compiling ...
; [:app] Build completed. (499 files, 2 compiled, 4 warnings, 0.11s)
; 
; ------ WARNING #1 - :infer-warning ---------------------------------------------
;  File: /Users/vinoth/Documents/workspace/second-brain-studio-webapp/src/second_brain_studio_webapp/prosemirror.cljs:46:27
; --------------------------------------------------------------------------------
;   43 | (defn toolbar [editor-ref]
;   44 |   [:div.toolbar
;   45 |    [:button {:on-click #(when-let [editor @editor-ref]
;   46 |                           (.. editor -state -tr
; ---------------------------------^----------------------------------------------
;  Cannot infer target type in expression (. (. (. editor -state) -tr) (.setNodeMarkup (.. editor -state -selection -$from -pos) "heading" #object[cljs.tagged_literals.JSValue 0x5145f108 "cljs.tagged_literals.JSValue@5145f108"]))
; --------------------------------------------------------------------------------
;   47 |                               (.setNodeMarkup (.. editor -state -selection -$from -pos) "heading" #js {:level 1})
;   48 |                               (.dispatch editor)))} "H1"]
;   49 |    [:button {:on-click #(when-let [editor @editor-ref]
;   50 |                           (.. editor -state -tr
; --------------------------------------------------------------------------------
; 
; ------ WARNING #2 - :infer-warning ---------------------------------------------
;  File: /Users/vinoth/Documents/workspace/second-brain-studio-webapp/src/second_brain_studio_webapp/prosemirror.cljs:46:27
; --------------------------------------------------------------------------------
;   43 | (defn toolbar [editor-ref]
;   44 |   [:div.toolbar
;   45 |    [:button {:on-click #(when-let [editor @editor-ref]
;   46 |                           (.. editor -state -tr
; ---------------------------------^----------------------------------------------
;  Cannot infer target type in expression (. (. (. (. editor -state) -tr) (.setNodeMarkup (.. editor -state -selection -$from -pos) "heading" #object[cljs.tagged_literals.JSValue 0x5145f108 "cljs.tagged_literals.JSValue@5145f108"])) (.dispatch editor))
; --------------------------------------------------------------------------------
;   47 |                               (.setNodeMarkup (.. editor -state -selection -$from -pos) "heading" #js {:level 1})
;   48 |                               (.dispatch editor)))} "H1"]
;   49 |    [:button {:on-click #(when-let [editor @editor-ref]
;   50 |                           (.. editor -state -tr
; --------------------------------------------------------------------------------
; 
; ------ WARNING #3 - :infer-warning ---------------------------------------------
;  File: /Users/vinoth/Documents/workspace/second-brain-studio-webapp/src/second_brain_studio_webapp/prosemirror.cljs:50:27
; --------------------------------------------------------------------------------
;   47 |                               (.setNodeMarkup (.. editor -state -selection -$from -pos) "heading" #js {:level 1})
;   48 |                               (.dispatch editor)))} "H1"]
;   49 |    [:button {:on-click #(when-let [editor @editor-ref]
;   50 |                           (.. editor -state -tr
; ---------------------------------^----------------------------------------------
;  Cannot infer target type in expression (. (. (. editor -state) -tr) (.addMark (.. editor -state -selection -$from -pos) (.. editor -state -selection -$to -pos) (.. (.-schema editor) -marks -strong)))
; --------------------------------------------------------------------------------
;   51 |                               (.addMark (.. editor -state -selection -$from -pos)
;   52 |                                         (.. editor -state -selection -$to -pos)
;   53 |                                         (.. (.-schema editor) -marks -strong))
;   54 |                               (.dispatch editor)))} "Bold"]])
; --------------------------------------------------------------------------------
; 
; ------ WARNING #4 - :infer-warning ---------------------------------------------
;  File: /Users/vinoth/Documents/workspace/second-brain-studio-webapp/src/second_brain_studio_webapp/prosemirror.cljs:50:27
; --------------------------------------------------------------------------------
;   47 |                               (.setNodeMarkup (.. editor -state -selection -$from -pos) "heading" #js {:level 1})
;   48 |                               (.dispatch editor)))} "H1"]
;   49 |    [:button {:on-click #(when-let [editor @editor-ref]
;   50 |                           (.. editor -state -tr
; ---------------------------------^----------------------------------------------
;  Cannot infer target type in expression (. (. (. (. editor -state) -tr) (.addMark (.. editor -state -selection -$from -pos) (.. editor -state -selection -$to -pos) (.. (.-schema editor) -marks -strong))) (.dispatch editor))
; --------------------------------------------------------------------------------
;   51 |                               (.addMark (.. editor -state -selection -$from -pos)
;   52 |                                         (.. editor -state -selection -$to -pos)
;   53 |                                         (.. (.-schema editor) -marks -strong))
;   54 |                               (.dispatch editor)))} "Bold"]])
; --------------------------------------------------------------------------------
; [:app] Compiling ...
; [:app] Build completed. (499 files, 2 compiled, 0 warnings, 0.11s)
; [:app] Compiling ...
; [:app] Build completed. (499 files, 2 compiled, 0 warnings, 0.15s)
